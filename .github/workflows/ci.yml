name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn install --immutable

  ESLint:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn eslint "{src,apps,libs,test}/**/*.ts" --max-warnings=0

  Prettier:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn prettier --list-different .

  Push:
    if: ${{ github.event_name == 'push' }}
    needs: [ESLint, Prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: xalvaine/booking-backend:${{ github.sha }}

  Deploy:
    if: ${{ github.event_name == 'push' }}
    needs: Push
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.4
        env:
          VERSION: ${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: VERSION
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /home/github/booking-backend
            git fetch origin main
            git reset --hard origin/main
            VERSION=$VERSION yarn docker:prod
